/* [wxMaxima: input   start ] */
/*Helper functions to flip a matrix horizontally and vertically*/
rflip(M) := genmatrix(lambda([i, j], M[length(M)+1-i, j]), length(M), length(transpose(M)))$
cflip(M) := genmatrix(lambda([i, j], M[i, length(transpose(M))+1-j]), length(M), length(transpose(M)))$

matpad(M, y, x, r, c) := block([M:M, rows, cols], [
    /*Shift rows*/
    cols : length(transpose(M)),
    if y > 0 then block([], [
        M : rflip(M),
        for k from 1 thru y do
            M : addrow(M, makelist(0, cols)),
        M : rflip(M)
    ]),
    /*Shift columns*/
    rows : length(M),
    if x > 0 then block([], [
        M : cflip(M),
        for k from 1 thru x do
            M : addcol(M, makelist(0, rows)),
        M : cflip(M)
    ]),
    /*Pad rows*/
    cols : length(transpose(M)),
    if r > 0 then
        for k from 1 thru r do
            M : addrow(M, makelist(0, cols)),
    /*Pad columns*/
    rows : length(M),
    if c > 0 then
        for k from 1 thru c do
            M : addcol(M, makelist(0, rows)),
    return(M)
])$

matexplode(M, y, x, r, c) := block([M:M, rows, cols, R], [
    M1 : copymatrix(M),
    M2 : copymatrix(M),
    M3 : copymatrix(M),
    M4 : copymatrix(M),
    rows : length(M),
    cols : length(transpose(M)),
    if is(equal(rows, 1)) then x : 1,
    if is(equal(cols, 1)) then y : 1,
    for k from 0 thru rows-x-1 do [
        M1 : submatrix(rows - k, M1),
        M2 : submatrix(rows - k, M2)
    ],
    for k from 0 thru cols-y-1 do [
        M1 : submatrix(M1, cols - k),
        M3 : submatrix(M3, cols - k)
    ],
    for k from 1 thru y do [
        M2 : submatrix(M2, 1),
        M4 : submatrix(M4, 1)
    ],
    for k from 1 thru x do [
        M3 : submatrix(1, M3),
        M4 : submatrix(1, M4)
    ],
    R : zeromatrix(rows + r, cols + c),
    if is(equal(rows, 1)) then block([],
        R : R + matpad(M1, 0, 0, 0, cols - y + c),
        if is(notequal(cols, y)) then
            R : R + matpad(M2, 0, y + c, 0, 0))
    elseif is(equal(cols, 1)) then block([],
        if (x > 0) then
            R : R + matpad(M1, 0, 0, rows - x + r, cols - 1 + c),
        if (x < rows) then
            R : R + matpad(M3, x + r, 0, 0, cols - 1 + c))
    else 
        R : matpad(M1, 0, 0, rows - x + r, cols - y + c)+
            matpad(M2, 0, y + c, rows - x + r, 0)+
            matpad(M3, x + r, 0, 0, cols - y + c)+
            matpad(M4, x + r, y + c, 0, 0),
    return(R)
])$

coleq2list(eq) := maplist(lambda([l, r], l[1]=r[1]), lhs(eq), rhs(eq));

/* [wxMaxima: input   end   ] */